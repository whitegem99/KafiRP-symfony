{% extends 'base.admin.html.twig' %}

{% block title %}Yeni Soru Oluştur{% endblock %}
{% block pageTitle %}Yeni Soru Oluştur{% endblock %}

{% block body %}
    <div class="box">
        <div class="box-body">
            <form method="post">
                <div class="row">
                    <div class="col-12 mb-15">
                        <label>{{ form_label(form.text) }}</label>
                        {{ form_widget(form.text, {'attr': {'class': 'form-control', 'placeholder': 'Soru metnini yazınız'}}) }}
                    </div>

                    <div class="col-12 mb-15">
                        <label>{{ form_label(form.helpText) }}</label>
                        {{ form_widget(form.helpText, {'attr': {'class': 'form-control', 'placeholder': 'Eğer varsa soru yardımcı metnini yazınız' }}) }}
                    </div>

                    <div class="col-12 mb-15">
                        <label>{{ form_label(form.isCheckbox) }}</label>
                        <div class="adomx-checkbox-radio-group inline">
                        {% for opt in form.isCheckbox.children %}
                            <label class="adomx-radio-2" for="{{ opt.vars.id }}">
                                <input type="radio" name="{{ opt.vars.full_name }}" id="{{ opt.vars.id }}" value="{{ opt.vars.value }}" />
                                <i class="icon"></i>
                                {{ opt.vars.label }}
                            </label>
                        {% endfor %}
                        </div>
{#                        {{ form_widget(form.isCheckbox, {'attr': {'class': 'form-control' }}) }}#}
                    </div>

                    <div class="col-12 mb-15">
                        <label class="c-field__label">{{ form_label(form.options) }}</label>
                        <div class="options c-input u-mb-small" id="option_list" data-prototype="{{ form_widget(form.options.vars.prototype)|e('html_attr') }}">
                            {% for choiceField in form.options %}
                                {{ form_row(choiceField) }}
                            {% endfor %}
                        </div>

                    </div>

                    <div class="col-12 mb-15">
                        {{ form_widget(form._token) }}
                        {{ form_widget(form.save, {'attr': {'class': 'button button-primary'}}) }}
                    </div>
                </div>
            </form>
        </div>
    </div>
{% endblock %}
{% block javascripts %}
    <script>
        // this variable is the list in the dom, it's initiliazed when the document is ready
        var $collectionHolder;
        // the link which we click on to add new items
        var $addNewItem = $('<a href="#" class="button button-sm button-info mt-10">Yeni Seçenek Ekle</a>');
        // when the page is loaded and ready
        $(document).ready(function () {
            // get the collectionHolder, initilize the var by getting the list;
            $collectionHolder = $('#option_list');
            // append the add new item link to the collectionHolder
            $collectionHolder.append($addNewItem);
            // add an index property to the collectionHolder which helps track the count of forms we have in the list
            $collectionHolder.data('index', $collectionHolder.find('input').length)
            // finds all the panels in the list and foreach one of them we add a remove button to it
            // add remove button to existing items
            $collectionHolder.find('.panel').each(function () {
                // $(this) means the current panel that we are at
                // which means we pass the panel to the addRemoveButton function
                // inside the function we create a footer and remove link and append them to the panel
                // more informations in the function inside
                addRemoveButton($(this));
            });
            // handle the click event for addNewItem
            $addNewItem.click(function (e) {
                // preventDefault() is your  homework if you don't know what it is
                // also look up preventPropagation both are usefull
                e.preventDefault();
                // create a new form and append it to the collectionHolder
                // and by form we mean a new panel which contains the form
                addNewForm();
            })
        });
        /*
         * creates a new form and appends it to the collectionHolder
         */
        function addNewForm() {
            // getting the prototype
            // the prototype is the form itself, plain html
            var prototype = $collectionHolder.data('prototype');
            // get the index
            // this is the index we set when the document was ready, look above for more info
            var index = $collectionHolder.data('index');
            // create the form
            var newForm = prototype;
            // replace the __name__ string in the html using a regular expression with the index value
            newForm = newForm.replace(/__name__/g, index);
            // incrementing the index data and setting it again to the collectionHolder
            $collectionHolder.data('index', index+1);
            // create the panel
            // this is the panel that will be appending to the collectionHolder
            var $panel = $('<div class="panel panel-warning"><div class="panel-heading"></div></div>');
            // create the panel-body and append the form to it
            var $panelBody = $('<div class="panel-body"></div>').append(newForm);
            // append the body to the panel
            $panel.append($panelBody);
            // append the removebutton to the new panel
            addRemoveButton($panel);
            // append the panel to the addNewItem
            // we are doing it this way to that the link is always at the bottom of the collectionHolder
            $addNewItem.before($panel);
        }

        /**
         * adds a remove button to the panel that is passed in the parameter
         * @param $panel
         */
        function addRemoveButton ($panel) {
            // create remove button
            var $removeButton = $('<a href="#" class="button button-sm button-danger">Kaldır</a>');
            // appending the removebutton to the panel footer
            var $panelFooter = $('<div class="panel-footer"></div>').append($removeButton);
            // handle the click event of the remove button
            $removeButton.click(function (e) {
                e.preventDefault();
                // gets the parent of the button that we clicked on "the panel" and animates it
                // after the animation is done the element (the panel) is removed from the html
                $(e.target).parents('.panel').slideUp(1000, function () {
                    $(this).remove();
                })
            });
            // append the footer to the panel
            $panel.append($panelFooter);
        }
    </script>
{% endblock %}